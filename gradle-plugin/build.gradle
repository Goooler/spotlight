plugins {
  id 'java-gradle-plugin'
  id 'com.autonomousapps.testkit'
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jetbrains.kotlinx.binary-compatibility-validator'
}

gradlePlugin {
  plugins {
    betterSettings {
      id = "com.fueledbycaffeine.better-settings"
      implementationClass = "com.fueledbycaffeine.bettersettings.BetterSettingsPlugin"
    }
  }
}
kotlin {
  explicitApi()
}

gradleTestKitSupport {
  withSupportLibrary()
  withTruthLibrary()
}

def main = sourceSets["main"]

// Add a source set for the functional test suite. This must come _above_ the `dependencies` block.
def functionalTestSourceSet = sourceSets.maybeCreate("functionalTest")
functionalTestSourceSet.compileClasspath += main.output + configurations["testRuntimeClasspath"]
functionalTestSourceSet.runtimeClasspath += functionalTestSourceSet.output + functionalTestSourceSet.compileClasspath

dependencies {
  gradleApi()

  testImplementation(libs.assertk)
  testImplementation(platform(libs.junit.platform))
  testImplementation(libs.junit.jupiter)
  testRuntimeOnly(libs.junit.launcher)
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}