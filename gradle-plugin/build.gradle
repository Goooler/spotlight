plugins {
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish'
  id 'com.autonomousapps.testkit'
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jetbrains.kotlinx.binary-compatibility-validator'
}

group = "com.fueledbycaffeine"
version = '0.1'

gradlePlugin {
  vcsUrl = "https://github.com/joshfriend/spotlight"
  website = "https://github.com/joshfriend/spotlight"
  plugins {
    betterSettings {
      id = "com.fueledbycaffeine.spotlight"
      implementationClass = "com.fueledbycaffeine.spotlight.SpotlightSettingsPlugin"
      displayName = "Spotlight"
      description = "A plugin that makes managing `settings.gradle(.kts)` for large projects easier"
      tags = ["IDE", "dependencies"]
    }
  }
}

kotlin {
  explicitApi()
}

gradleTestKitSupport {
  withSupportLibrary()
  withTruthLibrary()
}

def main = sourceSets["main"]

// Add a source set for the functional test suite. This must come _above_ the `dependencies` block.
def functionalTestSourceSet = sourceSets.maybeCreate("functionalTest")
functionalTestSourceSet.compileClasspath += main.output + configurations["testRuntimeClasspath"]
functionalTestSourceSet.runtimeClasspath += functionalTestSourceSet.output + functionalTestSourceSet.compileClasspath

dependencies {
  testImplementation(libs.assertk)
  testImplementation(platform(libs.junit.platform))
  testImplementation(libs.junit.jupiter)
  testRuntimeOnly(libs.junit.launcher)
}

tasks.withType(ValidatePlugins).configureEach {
  enableStricterValidation = true
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}